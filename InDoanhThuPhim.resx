<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnInDTP.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>